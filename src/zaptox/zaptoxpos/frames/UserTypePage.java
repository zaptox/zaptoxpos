/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zaptox.zaptoxpos.frames;

import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import zaptox.zaptoxpos.beans.UserType;
import zaptox.zaptoxpos.dao.DbManager;
import zaptox.zaptoxpos.dao.DbManagerInterface;
import zaptox.zaptoxpos.util.PlayAideo;

/**
 *
 * @author Dell
 */
public class UserTypePage extends javax.swing.JFrame {

    /**
     * Creates new form DashBoardPage
     */
    DbManagerInterface dbManager;
    DefaultTableModel tableModelUserType;
    ArrayList<UserType> user_type_list;

    public UserTypePage() {
        initComponents();

        dbManager = new DbManager();
        tableModelUserType = (DefaultTableModel) this.jTableUserType.getModel();
        showInTable();
        this.jButtonUpdate.setVisible(false);
        this.jButtonDelete.setVisible(false);
        JTableHeader header = this.jTableUserType.getTableHeader();
        header.setBackground(new Color(0, 102, 255));
        header.setForeground(new Color(255, 255, 255));
        header.setFont(new Font("SansSerif", Font.BOLD, 16));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelMin = new javax.swing.JLabel();
        jLabelExit = new javax.swing.JLabel();
        jLabelHeaderRow = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonDelete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jButtonBack = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUserType = new javax.swing.JTable();
        jTextFieldUseType = new javax.swing.JTextField();
        jButtonUpdate = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelMin.setBackground(new java.awt.Color(255, 0, 0));
        jLabelMin.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelMin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMin.setText("-");
        jLabelMin.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });
        getContentPane().add(jLabelMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, 50, 40));

        jLabelExit.setBackground(new java.awt.Color(0, 102, 255));
        jLabelExit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelExit.setForeground(new java.awt.Color(255, 255, 255));
        jLabelExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelExit.setText("X");
        jLabelExit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jLabelExit.setOpaque(true);
        jLabelExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelExitMouseExited(evt);
            }
        });
        getContentPane().add(jLabelExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 50, 40));

        jLabelHeaderRow.setBackground(new java.awt.Color(0, 102, 255));
        jLabelHeaderRow.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelHeaderRow.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHeaderRow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelHeaderRow.setText("UserTypes");
        jLabelHeaderRow.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jLabelHeaderRow.setOpaque(true);
        getContentPane().add(jLabelHeaderRow, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 40));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 51), 2, true));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonDelete.setBackground(new java.awt.Color(0, 102, 255));
        jButtonDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText("Delete");
        jButtonDelete.setBorder(null);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 290, 70));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 370, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("USER TYPE*");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 210, -1));

        jButtonBack.setBackground(new java.awt.Color(0, 102, 255));
        jButtonBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonBack.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBack.setText("Back");
        jButtonBack.setBorder(null);
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 20));

        jButtonSave.setBackground(new java.awt.Color(0, 102, 255));
        jButtonSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSave.setText("Save");
        jButtonSave.setBorder(null);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 290, 70));

        jButtonClear.setBackground(new java.awt.Color(0, 102, 255));
        jButtonClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonClear.setForeground(new java.awt.Color(255, 255, 255));
        jButtonClear.setText("Clear");
        jButtonClear.setBorder(null);
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 290, 70));

        jTableUserType.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTableUserType.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUserType.setToolTipText("Products");
        jTableUserType.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableUserType.setGridColor(new java.awt.Color(0, 102, 255));
        jTableUserType.setSelectionBackground(new java.awt.Color(0, 0, 51));
        jTableUserType.setSelectionForeground(new java.awt.Color(0, 204, 0));
        jTableUserType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUserTypeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUserType);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, 230, 470));

        jTextFieldUseType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldUseType.setForeground(new java.awt.Color(153, 153, 153));
        jTextFieldUseType.setText("enter type...");
        jTextFieldUseType.setBorder(null);
        jTextFieldUseType.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextFieldUseType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldUseTypeMouseClicked(evt);
            }
        });
        jTextFieldUseType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUseTypeActionPerformed(evt);
            }
        });
        jTextFieldUseType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldUseTypeKeyPressed(evt);
            }
        });
        jPanel1.add(jTextFieldUseType, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 370, 20));

        jButtonUpdate.setBackground(new java.awt.Color(0, 102, 255));
        jButtonUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setText("Update");
        jButtonUpdate.setBorder(null);
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 290, 70));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zaptox/zaptoxpos/images/logo.png"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 300, 120));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 750, 550));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked

    private void jLabelExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelExitMouseClicked

    private void jLabelExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseEntered
        // TODO add your handling code here:

        this.jLabelExit.setBackground(Color.red);
    }//GEN-LAST:event_jLabelExitMouseEntered

    private void jLabelExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseExited
        // TODO add your handling code here:
        this.jLabelExit.setBackground(new Color(0, 102, 255));
    }//GEN-LAST:event_jLabelExitMouseExited

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        if (!(this.jTableUserType.getSelectedRow() == -1)) {
            int user_type_id = user_type_list.get(this.jTableUserType.getSelectedRow()).getUser_type_id();
            if (dbManager.deleteUserType(new UserType(user_type_id, "", 0)) != 0) {
                showInTable();
                this.jButtonDelete.setVisible(false);
                this.jButtonSave.setVisible(true);
                this.jButtonUpdate.setVisible(false);
                this.jTextFieldUseType.setText("enter type...");
                this.jTextFieldUseType.setForeground(Color.gray);

                JOptionPane.showMessageDialog(this, "Deleted succesfully");

            }
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        new DashBoardPage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed

        if (!(this.jTextFieldUseType.getText().equalsIgnoreCase("enter type...") || this.jTextFieldUseType.equals(""))) {
            if (this.jTextFieldUseType.getText().matches("[a-zA-Z]+")) {
                if (dbManager.insertUserType(new UserType(0, this.jTextFieldUseType.getText(), 1)) != 0) {
                    JOptionPane.showMessageDialog(this, "Added succesfully");
                    this.jTextFieldUseType.setForeground(Color.gray);

                    showInTable();
                    this.jTextFieldUseType.setText("enter type...");
                }
            } else {
                new PlayAideo().playErrorSound();
                JOptionPane.showMessageDialog(this, "Incorrect usertype format", "Error", JOptionPane.ERROR_MESSAGE);

            }
        } else {
            new PlayAideo().playErrorSound();
            JOptionPane.showMessageDialog(this, "Please type UserType", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        this.jTextFieldUseType.setText("enter type...");
        this.jTextFieldUseType.setForeground(Color.GRAY);
        this.jButtonDelete.setVisible(false);
        this.jButtonSave.setVisible(true);
        this.jButtonUpdate.setVisible(false);


    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jTableUserTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUserTypeMouseClicked
        // TODO add your handling code here:
        this.jButtonClear.setVisible(true);
        this.jButtonDelete.setVisible(true);
        this.jButtonSave.setVisible(false);
        this.jButtonUpdate.setVisible(true);

        this.jTextFieldUseType.setText(user_type_list.get(this.jTableUserType.getSelectedRow()).getUser_type());
        this.jTextFieldUseType.setForeground(Color.black);


    }//GEN-LAST:event_jTableUserTypeMouseClicked

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        if (!(this.jTextFieldUseType.getText().equalsIgnoreCase("enter type...") || this.jTextFieldUseType.equals(""))) {
            int user_type_id = user_type_list.get(this.jTableUserType.getSelectedRow()).getUser_type_id();
            if (dbManager.updateUserType(new UserType(user_type_id, this.jTextFieldUseType.getText(), 1)) != 0) {
                showInTable();
                this.jButtonDelete.setVisible(false);
                this.jButtonSave.setVisible(true);
                this.jButtonUpdate.setVisible(false);
                this.jTextFieldUseType.setText("enter type...");
                this.jTextFieldUseType.setForeground(Color.gray);

                JOptionPane.showMessageDialog(this, "Updated succesfully");

            }
        } else {
            new PlayAideo().playErrorSound();
            JOptionPane.showMessageDialog(this, "Please type UserType", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jTextFieldUseTypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldUseTypeKeyPressed
        // TODO add your handling code here:

        if (this.jTextFieldUseType.getText().equals("enter type...")) {
            this.jTextFieldUseType.setText("");
            this.jTextFieldUseType.setForeground(Color.black);
        }
    }//GEN-LAST:event_jTextFieldUseTypeKeyPressed

    private void jTextFieldUseTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldUseTypeMouseClicked
        // TODO add your handling code here:
        if (this.jTextFieldUseType.getText().equals("enter type...")) {
            this.jTextFieldUseType.setText("");
            this.jTextFieldUseType.setForeground(Color.black);
        }
    }//GEN-LAST:event_jTextFieldUseTypeMouseClicked

    private void jTextFieldUseTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUseTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUseTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserTypePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserTypePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserTypePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserTypePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserTypePage().setVisible(true);
            }
        });
    }

    public void showInTable() {
        tableModelUserType.setRowCount(0);

        user_type_list = dbManager.getAllUsersType();
        for (UserType userType : user_type_list) {
            Vector V = new Vector();
            V.add(userType.getUser_type());
            tableModelUserType.addRow(V);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelExit;
    private javax.swing.JLabel jLabelHeaderRow;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableUserType;
    private javax.swing.JTextField jTextFieldUseType;
    // End of variables declaration//GEN-END:variables
}
